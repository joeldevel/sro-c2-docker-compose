{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Desaf\u00edo de Docker compose","text":"<p>Ejecutar varios contenedores detras de un proxy reverso</p> <p>Ver el repo Desafio-docker-compose.</p>"},{"location":"#pasos","title":"Pasos","text":""},{"location":"#crear-entradas-en-etchosts-para","title":"Crear entradas en <code>/etc/hosts</code> para","text":"<ul> <li>wp.local</li> <li>joomla.local</li> <li>docs.local</li> </ul>"},{"location":"#crear-un-archivo-docker-composeyml-con-las-siguientes-secciones","title":"Crear un archivo docker-compose.yml con las siguientes secciones","text":""},{"location":"#servicio-wordpress","title":"servicio wordpress","text":"<p>Usamos una imagen wordpress</p> <pre><code>    wordpress:\n        image: wordpress\n        restart: always\n        environment:\n            - WORDPRESS_DB_HOST=wordpressdb\n            - WORDPRESS_DB_PASSWORD=secret\n            - WORDPRESS_DB_NAME=wordpress\n            - WORDPRESS_DB_USER=manager\n            - VIRTUAL_HOST=wp.local\n        depends_on:\n            - wordpressdb\n        volumes:\n            - wordpress:/var/www/html\n        networks: \n            - wp-net\n</code></pre>"},{"location":"#servicio-wordpressdb","title":"servicio wordpressdb","text":"<pre><code>\n    wordpressdb:\n        image: mariadb\n        restart: always\n        environment:\n            - MYSQL_ROOT_PASSWORD=secret\n            - MYSQL_DATABASE=wordpress\n            - MYSQL_USER=manager\n            - MYSQL_PASSWORD=secret\n        volumes:\n            - wordpressdb:/var/lib/mysql\n        networks: \n            - wp-net\n</code></pre>"},{"location":"#servicio-joomla","title":"servicio joomla","text":"<p>Usamos una imagen bitnami/joomla.</p> <pre><code>    joomla:\n        image: bitnami/joomla\n        restart: always\n        environment:\n            - JOOMLA_DATABASE_PORT=3306\n            - JOOMLA_DATABASE_HOST=joomladb\n            - JOOMLA_DATABASE_USER=bn_joomla\n            - JOOMLA_DATABASE_NAME=bitnami_joomla\n            - ALLOW_EMPTY_PASSWORD=yes\n            - VIRTUAL_HOST=joomla.local \n            - VIRTUAL_PORT=8080\n        depends_on:\n            - joomladb\n        ports:\n            - 8080:8080\n        networks:\n            - joomla-net\n        volumes:\n            - joomla_data:/bitnami/joomla\n</code></pre>"},{"location":"#servicio-jommladb","title":"servicio jommladb","text":"<p>Puede ser mysql o mariadb</p> <pre><code>    joomladb:\n        image: bitnami/mariadb\n        restart: always\n        environment:\n            - ALLOW_EMPTY_PASSWORD=yes\n            - MARIADB_DATABASE=bitnami_joomla\n            - MARIADB_USER=bn_joomla\n        networks:\n            - joomla-net\n        volumes:\n            - joomladb_data:/bitnami/mariadb\n</code></pre>"},{"location":"#servicio-para-la-documentacion","title":"Servicio para la documentaci\u00f3n","text":"<pre><code>    docs:\n        image: nginx\n        environment:\n            - VIRTUAL_HOST=docs.local\n        volumes:\n            - ./site:/usr/share/nginx/html:ro\n        networks:\n            - docs-net\n</code></pre>"},{"location":"#proxy-reverso","title":"proxy reverso","text":"<p>El proxy nos sirve para tener un \u00fanico punto de entrada a los contenedores.</p> <pre><code>    ingress:\n        image: nginxproxy/nginx-proxy\n        ports:\n            - 80:80\n        volumes:\n            - /var/run/docker.sock:/tmp/docker.sock:ro\n        networks:\n            - wp-net\n            - joomla-net\n            - docs-net\n</code></pre>"},{"location":"#networks","title":"networks","text":"<p>Crear networks para cada servicio</p> <pre><code>networks:\n    wp-net:\n    joomla-net:\n    docs-net:\n</code></pre>"},{"location":"#volumenes","title":"vol\u00famenes","text":"<p>Necesarios para persistir los datos</p> <pre><code>volumes:\n    wordpress:\n    wordpressdb:\n    joomla_data:\n    joomladb_data:\n\n</code></pre>"},{"location":"#docker-compose-completo","title":"docker-compose completo","text":"<pre><code>version: '3.8'\nservices:\n    wordpress:\n        image: wordpress\n        restart: always\n        environment:\n            - WORDPRESS_DB_HOST=wordpressdb\n            - WORDPRESS_DB_PASSWORD=secret\n            - WORDPRESS_DB_NAME=wordpress\n            - WORDPRESS_DB_USER=manager\n            - VIRTUAL_HOST=wp.local\n        depends_on:\n            - wordpressdb\n        volumes:\n            - wordpress:/var/www/html\n        networks: \n            - wp-net\n\n    wordpressdb:\n        image: mariadb\n        restart: always\n        environment:\n            - MYSQL_ROOT_PASSWORD=secret\n            - MYSQL_DATABASE=wordpress\n            - MYSQL_USER=manager\n            - MYSQL_PASSWORD=secret\n        volumes:\n            - wordpressdb:/var/lib/mysql\n        networks: \n            - wp-net\n\n    joomla:\n        image: bitnami/joomla\n        restart: always\n        environment:\n            - JOOMLA_DATABASE_PORT=3306\n            - JOOMLA_DATABASE_HOST=joomladb\n            - JOOMLA_DATABASE_USER=bn_joomla\n            - JOOMLA_DATABASE_NAME=bitnami_joomla\n            - ALLOW_EMPTY_PASSWORD=yes\n            - VIRTUAL_HOST=joomla.local \n            - VIRTUAL_PORT=8080\n        depends_on:\n            - joomladb\n        ports:\n            - 8080:8080\n        networks:\n            - joomla-net\n        volumes:\n            - joomla_data:/bitnami/joomla\n\n    joomladb:\n        image: bitnami/mariadb\n        restart: always\n        environment:\n            - ALLOW_EMPTY_PASSWORD=yes\n            - MARIADB_DATABASE=bitnami_joomla\n            - MARIADB_USER=bn_joomla\n        networks:\n            - joomla-net\n        volumes:\n            - joomladb_data:/bitnami/mariadb\n\n    docs:\n        image: nginx\n        environment:\n            - VIRTUAL_HOST=docs.local\n        volumes:\n            - ./site:/usr/share/nginx/html:ro\n        networks:\n            - docs-net\n\n    ingress:\n        image: nginxproxy/nginx-proxy\n        ports:\n            - 80:80\n        volumes:\n            - /var/run/docker.sock:/tmp/docker.sock:ro\n        networks:\n            - wp-net\n            - joomla-net\n            - docs-net\nnetworks:\n    wp-net:\n    joomla-net:\n    docs-net:\nvolumes:\n    wordpress:\n    wordpressdb:\n    joomla_data:\n    joomladb_data:\n\n</code></pre>"},{"location":"#levantar-los-contenedores","title":"Levantar los contenedores","text":"<p>Correr <code>docker compose up</code> para iniciar los servicios</p>"},{"location":"#verificar-que-funcione","title":"Verificar que funcione","text":"<p>Dirigirse a las respectivas url</p> <ul> <li>wordpress</li> <li>joomla</li> <li>documentaci\u00f3n</li> </ul>"},{"location":"#detener-los-contenedores","title":"Detener los contenedores","text":"<p>Correr <code>docker compose down</code> para detener los servicios y remover los contenedores.</p>"},{"location":"#documentacion-del-proyecto","title":"Documentaci\u00f3n del proyecto","text":"<p>Para la documentaci\u00f3n creamos una imagen de mkdocs y le instalamos el tema material.</p> <ul> <li>crear la imagen</li> <li>crear el sitio </li> <li>modificar el index.md con la info</li> <li>en el <code>mkdocs.yml</code> poner   <code>yaml     site_name: Desafio Docker compose     theme:         name: material</code></li> <li>correr el build  // sitio listo para subir a cualquier servidor</li> <li>copiar el directorio <code>site</code> al directorio donde ejecutaremos <code>docker compose up</code></li> </ul>"},{"location":"#links-utiles","title":"Links \u00fatiles","text":"<ul> <li>wordpress</li> <li>joomla</li> <li>nginxproxy</li> <li>mkdocs</li> <li>como usar nuestra mkdocs cli</li> </ul>"}]}